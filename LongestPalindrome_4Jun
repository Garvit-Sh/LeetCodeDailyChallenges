class Solution {
    public int longestPalindrome(String s) {
        int n= s.length();
        int [] ch= new int[128];
        for(char i:s.toCharArray()){
            ch[i]++;
        }
        int res=0;
        for(int i=0;i<128 ; i++){
            int val=ch[i];
            res+=(val/2)*2;
            if(res%2==0 && val%2==1){
                res+=1;
            }
        }
        return res;
        
    }
}


//Time Complexity - O(n+n)=O(n) becuase in string size n that get and insert value is constant
//space complexity - O(128) => O(1)
