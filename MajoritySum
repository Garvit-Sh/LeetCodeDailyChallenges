class Solution {
    public int majorityElement(int[] nums) {
        int n=nums.length;
        int count=0;int ele=0;
      for(int i=0; i<n ; i++){
        if(count==0) { 
            count=1;
            ele=nums[i];
            }
        
        else if(nums[i]==ele) {
            count++;
        }
        else count--;
        
        }
        int cnt=0;
        for(var x : nums){
            if(x==ele) cnt++;
            if(cnt>n/2) return ele;
        }
        return -1;

    }
}


class Solution {
    public int majorityElement(int[] nums) {
        int n=nums.length;
        HashMap<Integer,Integer> mp=new HashMap<>();
        for(int i=0 ; i<n ; i++){
            mp.put(nums[i],mp.getOrDefault(nums[i],0)+1);
        }
        for(Map.Entry<Integer ,Integer> hm : mp.entrySet()){
            if(hm.getValue()>n/2){
                return hm.getKey();
            }
        }
        return -1;
        
    }
}
